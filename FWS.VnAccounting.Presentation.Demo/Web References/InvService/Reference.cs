//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.468
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.468.
// 
#pragma warning disable 1591

namespace FWS.VnAccounting.Presentation.Demo.InvService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="InventoryServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CObjectBase))]
    public partial class InventoryService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetInventoryItemsListInCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryItemsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInventoryItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryItemGroupListInCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryItemGroupListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryItemGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInventoryItemGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryStockListInCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryStockListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryStockOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInventoryStockOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryTaxListInCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryTaxListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryTaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInventoryTaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryUnitListInCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryUnitListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInventoryUnitOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public InventoryService() {
            this.Url = global::FWS.VnAccounting.Presentation.Demo.Properties.Settings.Default.FWS_VnAccounting_Presentation_Demo_InvService_InventoryService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetInventoryItemsListInCSVCompletedEventHandler GetInventoryItemsListInCSVCompleted;
        
        /// <remarks/>
        public event GetInventoryItemsListCompletedEventHandler GetInventoryItemsListCompleted;
        
        /// <remarks/>
        public event GetInventoryItemCompletedEventHandler GetInventoryItemCompleted;
        
        /// <remarks/>
        public event UpdateInventoryItemCompletedEventHandler UpdateInventoryItemCompleted;
        
        /// <remarks/>
        public event GetInventoryItemGroupListInCSVCompletedEventHandler GetInventoryItemGroupListInCSVCompleted;
        
        /// <remarks/>
        public event GetInventoryItemGroupListCompletedEventHandler GetInventoryItemGroupListCompleted;
        
        /// <remarks/>
        public event GetInventoryItemGroupCompletedEventHandler GetInventoryItemGroupCompleted;
        
        /// <remarks/>
        public event UpdateInventoryItemGroupCompletedEventHandler UpdateInventoryItemGroupCompleted;
        
        /// <remarks/>
        public event GetInventoryStockListInCSVCompletedEventHandler GetInventoryStockListInCSVCompleted;
        
        /// <remarks/>
        public event GetInventoryStockListCompletedEventHandler GetInventoryStockListCompleted;
        
        /// <remarks/>
        public event GetInventoryStockCompletedEventHandler GetInventoryStockCompleted;
        
        /// <remarks/>
        public event UpdateInventoryStockCompletedEventHandler UpdateInventoryStockCompleted;
        
        /// <remarks/>
        public event GetInventoryTaxListInCSVCompletedEventHandler GetInventoryTaxListInCSVCompleted;
        
        /// <remarks/>
        public event GetInventoryTaxListCompletedEventHandler GetInventoryTaxListCompleted;
        
        /// <remarks/>
        public event GetInventoryTaxCompletedEventHandler GetInventoryTaxCompleted;
        
        /// <remarks/>
        public event UpdateInventoryTaxCompletedEventHandler UpdateInventoryTaxCompleted;
        
        /// <remarks/>
        public event GetInventoryUnitListInCSVCompletedEventHandler GetInventoryUnitListInCSVCompleted;
        
        /// <remarks/>
        public event GetInventoryUnitListCompletedEventHandler GetInventoryUnitListCompleted;
        
        /// <remarks/>
        public event GetInventoryUnitCompletedEventHandler GetInventoryUnitCompleted;
        
        /// <remarks/>
        public event UpdateInventoryUnitCompletedEventHandler UpdateInventoryUnitCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventoryItemsListInCSV", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInventoryItemsListInCSV(string InputValue, ref string PageInfo) {
            object[] results = this.Invoke("GetInventoryItemsListInCSV", new object[] {
                        InputValue,
                        PageInfo});
            PageInfo = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryItemsListInCSVAsync(string InputValue, string PageInfo) {
            this.GetInventoryItemsListInCSVAsync(InputValue, PageInfo, null);
        }
        
        /// <remarks/>
        public void GetInventoryItemsListInCSVAsync(string InputValue, string PageInfo, object userState) {
            if ((this.GetInventoryItemsListInCSVOperationCompleted == null)) {
                this.GetInventoryItemsListInCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryItemsListInCSVOperationCompleted);
            }
            this.InvokeAsync("GetInventoryItemsListInCSV", new object[] {
                        InputValue,
                        PageInfo}, this.GetInventoryItemsListInCSVOperationCompleted, userState);
        }
        
        private void OnGetInventoryItemsListInCSVOperationCompleted(object arg) {
            if ((this.GetInventoryItemsListInCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryItemsListInCSVCompleted(this, new GetInventoryItemsListInCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventoryItemsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CItems[] GetInventoryItemsList(string InputValue, ref CPagingInfo PageInfo) {
            object[] results = this.Invoke("GetInventoryItemsList", new object[] {
                        InputValue,
                        PageInfo});
            PageInfo = ((CPagingInfo)(results[1]));
            return ((CItems[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryItemsListAsync(string InputValue, CPagingInfo PageInfo) {
            this.GetInventoryItemsListAsync(InputValue, PageInfo, null);
        }
        
        /// <remarks/>
        public void GetInventoryItemsListAsync(string InputValue, CPagingInfo PageInfo, object userState) {
            if ((this.GetInventoryItemsListOperationCompleted == null)) {
                this.GetInventoryItemsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryItemsListOperationCompleted);
            }
            this.InvokeAsync("GetInventoryItemsList", new object[] {
                        InputValue,
                        PageInfo}, this.GetInventoryItemsListOperationCompleted, userState);
        }
        
        private void OnGetInventoryItemsListOperationCompleted(object arg) {
            if ((this.GetInventoryItemsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryItemsListCompleted(this, new GetInventoryItemsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventoryItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CItems GetInventoryItem(string InputValue) {
            object[] results = this.Invoke("GetInventoryItem", new object[] {
                        InputValue});
            return ((CItems)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryItemAsync(string InputValue) {
            this.GetInventoryItemAsync(InputValue, null);
        }
        
        /// <remarks/>
        public void GetInventoryItemAsync(string InputValue, object userState) {
            if ((this.GetInventoryItemOperationCompleted == null)) {
                this.GetInventoryItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryItemOperationCompleted);
            }
            this.InvokeAsync("GetInventoryItem", new object[] {
                        InputValue}, this.GetInventoryItemOperationCompleted, userState);
        }
        
        private void OnGetInventoryItemOperationCompleted(object arg) {
            if ((this.GetInventoryItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryItemCompleted(this, new GetInventoryItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateInventoryItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CApplicationMessage UpdateInventoryItem(string InputValue) {
            object[] results = this.Invoke("UpdateInventoryItem", new object[] {
                        InputValue});
            return ((CApplicationMessage)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInventoryItemAsync(string InputValue) {
            this.UpdateInventoryItemAsync(InputValue, null);
        }
        
        /// <remarks/>
        public void UpdateInventoryItemAsync(string InputValue, object userState) {
            if ((this.UpdateInventoryItemOperationCompleted == null)) {
                this.UpdateInventoryItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInventoryItemOperationCompleted);
            }
            this.InvokeAsync("UpdateInventoryItem", new object[] {
                        InputValue}, this.UpdateInventoryItemOperationCompleted, userState);
        }
        
        private void OnUpdateInventoryItemOperationCompleted(object arg) {
            if ((this.UpdateInventoryItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInventoryItemCompleted(this, new UpdateInventoryItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventoryItemGroupListInCSV", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInventoryItemGroupListInCSV(string InputValue, ref string PageInfo) {
            object[] results = this.Invoke("GetInventoryItemGroupListInCSV", new object[] {
                        InputValue,
                        PageInfo});
            PageInfo = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryItemGroupListInCSVAsync(string InputValue, string PageInfo) {
            this.GetInventoryItemGroupListInCSVAsync(InputValue, PageInfo, null);
        }
        
        /// <remarks/>
        public void GetInventoryItemGroupListInCSVAsync(string InputValue, string PageInfo, object userState) {
            if ((this.GetInventoryItemGroupListInCSVOperationCompleted == null)) {
                this.GetInventoryItemGroupListInCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryItemGroupListInCSVOperationCompleted);
            }
            this.InvokeAsync("GetInventoryItemGroupListInCSV", new object[] {
                        InputValue,
                        PageInfo}, this.GetInventoryItemGroupListInCSVOperationCompleted, userState);
        }
        
        private void OnGetInventoryItemGroupListInCSVOperationCompleted(object arg) {
            if ((this.GetInventoryItemGroupListInCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryItemGroupListInCSVCompleted(this, new GetInventoryItemGroupListInCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventoryItemGroupList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CItemGroup[] GetInventoryItemGroupList(string InputValue, ref CPagingInfo PageInfo) {
            object[] results = this.Invoke("GetInventoryItemGroupList", new object[] {
                        InputValue,
                        PageInfo});
            PageInfo = ((CPagingInfo)(results[1]));
            return ((CItemGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryItemGroupListAsync(string InputValue, CPagingInfo PageInfo) {
            this.GetInventoryItemGroupListAsync(InputValue, PageInfo, null);
        }
        
        /// <remarks/>
        public void GetInventoryItemGroupListAsync(string InputValue, CPagingInfo PageInfo, object userState) {
            if ((this.GetInventoryItemGroupListOperationCompleted == null)) {
                this.GetInventoryItemGroupListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryItemGroupListOperationCompleted);
            }
            this.InvokeAsync("GetInventoryItemGroupList", new object[] {
                        InputValue,
                        PageInfo}, this.GetInventoryItemGroupListOperationCompleted, userState);
        }
        
        private void OnGetInventoryItemGroupListOperationCompleted(object arg) {
            if ((this.GetInventoryItemGroupListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryItemGroupListCompleted(this, new GetInventoryItemGroupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventoryItemGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CItemGroup GetInventoryItemGroup(string InputValue) {
            object[] results = this.Invoke("GetInventoryItemGroup", new object[] {
                        InputValue});
            return ((CItemGroup)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryItemGroupAsync(string InputValue) {
            this.GetInventoryItemGroupAsync(InputValue, null);
        }
        
        /// <remarks/>
        public void GetInventoryItemGroupAsync(string InputValue, object userState) {
            if ((this.GetInventoryItemGroupOperationCompleted == null)) {
                this.GetInventoryItemGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryItemGroupOperationCompleted);
            }
            this.InvokeAsync("GetInventoryItemGroup", new object[] {
                        InputValue}, this.GetInventoryItemGroupOperationCompleted, userState);
        }
        
        private void OnGetInventoryItemGroupOperationCompleted(object arg) {
            if ((this.GetInventoryItemGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryItemGroupCompleted(this, new GetInventoryItemGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateInventoryItemGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CApplicationMessage UpdateInventoryItemGroup(string InputValue) {
            object[] results = this.Invoke("UpdateInventoryItemGroup", new object[] {
                        InputValue});
            return ((CApplicationMessage)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInventoryItemGroupAsync(string InputValue) {
            this.UpdateInventoryItemGroupAsync(InputValue, null);
        }
        
        /// <remarks/>
        public void UpdateInventoryItemGroupAsync(string InputValue, object userState) {
            if ((this.UpdateInventoryItemGroupOperationCompleted == null)) {
                this.UpdateInventoryItemGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInventoryItemGroupOperationCompleted);
            }
            this.InvokeAsync("UpdateInventoryItemGroup", new object[] {
                        InputValue}, this.UpdateInventoryItemGroupOperationCompleted, userState);
        }
        
        private void OnUpdateInventoryItemGroupOperationCompleted(object arg) {
            if ((this.UpdateInventoryItemGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInventoryItemGroupCompleted(this, new UpdateInventoryItemGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventoryStockListInCSV", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInventoryStockListInCSV(string InputValue, ref string PageInfo) {
            object[] results = this.Invoke("GetInventoryStockListInCSV", new object[] {
                        InputValue,
                        PageInfo});
            PageInfo = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryStockListInCSVAsync(string InputValue, string PageInfo) {
            this.GetInventoryStockListInCSVAsync(InputValue, PageInfo, null);
        }
        
        /// <remarks/>
        public void GetInventoryStockListInCSVAsync(string InputValue, string PageInfo, object userState) {
            if ((this.GetInventoryStockListInCSVOperationCompleted == null)) {
                this.GetInventoryStockListInCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryStockListInCSVOperationCompleted);
            }
            this.InvokeAsync("GetInventoryStockListInCSV", new object[] {
                        InputValue,
                        PageInfo}, this.GetInventoryStockListInCSVOperationCompleted, userState);
        }
        
        private void OnGetInventoryStockListInCSVOperationCompleted(object arg) {
            if ((this.GetInventoryStockListInCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryStockListInCSVCompleted(this, new GetInventoryStockListInCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventoryStockList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CStock[] GetInventoryStockList(string InputValue, ref CPagingInfo PageInfo) {
            object[] results = this.Invoke("GetInventoryStockList", new object[] {
                        InputValue,
                        PageInfo});
            PageInfo = ((CPagingInfo)(results[1]));
            return ((CStock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryStockListAsync(string InputValue, CPagingInfo PageInfo) {
            this.GetInventoryStockListAsync(InputValue, PageInfo, null);
        }
        
        /// <remarks/>
        public void GetInventoryStockListAsync(string InputValue, CPagingInfo PageInfo, object userState) {
            if ((this.GetInventoryStockListOperationCompleted == null)) {
                this.GetInventoryStockListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryStockListOperationCompleted);
            }
            this.InvokeAsync("GetInventoryStockList", new object[] {
                        InputValue,
                        PageInfo}, this.GetInventoryStockListOperationCompleted, userState);
        }
        
        private void OnGetInventoryStockListOperationCompleted(object arg) {
            if ((this.GetInventoryStockListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryStockListCompleted(this, new GetInventoryStockListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventoryStock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CStock GetInventoryStock(string InputValue) {
            object[] results = this.Invoke("GetInventoryStock", new object[] {
                        InputValue});
            return ((CStock)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryStockAsync(string InputValue) {
            this.GetInventoryStockAsync(InputValue, null);
        }
        
        /// <remarks/>
        public void GetInventoryStockAsync(string InputValue, object userState) {
            if ((this.GetInventoryStockOperationCompleted == null)) {
                this.GetInventoryStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryStockOperationCompleted);
            }
            this.InvokeAsync("GetInventoryStock", new object[] {
                        InputValue}, this.GetInventoryStockOperationCompleted, userState);
        }
        
        private void OnGetInventoryStockOperationCompleted(object arg) {
            if ((this.GetInventoryStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryStockCompleted(this, new GetInventoryStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateInventoryStock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CApplicationMessage UpdateInventoryStock(string InputValue) {
            object[] results = this.Invoke("UpdateInventoryStock", new object[] {
                        InputValue});
            return ((CApplicationMessage)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInventoryStockAsync(string InputValue) {
            this.UpdateInventoryStockAsync(InputValue, null);
        }
        
        /// <remarks/>
        public void UpdateInventoryStockAsync(string InputValue, object userState) {
            if ((this.UpdateInventoryStockOperationCompleted == null)) {
                this.UpdateInventoryStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInventoryStockOperationCompleted);
            }
            this.InvokeAsync("UpdateInventoryStock", new object[] {
                        InputValue}, this.UpdateInventoryStockOperationCompleted, userState);
        }
        
        private void OnUpdateInventoryStockOperationCompleted(object arg) {
            if ((this.UpdateInventoryStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInventoryStockCompleted(this, new UpdateInventoryStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventoryTaxListInCSV", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInventoryTaxListInCSV(string InputValue, ref string PageInfo) {
            object[] results = this.Invoke("GetInventoryTaxListInCSV", new object[] {
                        InputValue,
                        PageInfo});
            PageInfo = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryTaxListInCSVAsync(string InputValue, string PageInfo) {
            this.GetInventoryTaxListInCSVAsync(InputValue, PageInfo, null);
        }
        
        /// <remarks/>
        public void GetInventoryTaxListInCSVAsync(string InputValue, string PageInfo, object userState) {
            if ((this.GetInventoryTaxListInCSVOperationCompleted == null)) {
                this.GetInventoryTaxListInCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryTaxListInCSVOperationCompleted);
            }
            this.InvokeAsync("GetInventoryTaxListInCSV", new object[] {
                        InputValue,
                        PageInfo}, this.GetInventoryTaxListInCSVOperationCompleted, userState);
        }
        
        private void OnGetInventoryTaxListInCSVOperationCompleted(object arg) {
            if ((this.GetInventoryTaxListInCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryTaxListInCSVCompleted(this, new GetInventoryTaxListInCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventoryTaxList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CTax[] GetInventoryTaxList(string InputValue, ref CPagingInfo PageInfo) {
            object[] results = this.Invoke("GetInventoryTaxList", new object[] {
                        InputValue,
                        PageInfo});
            PageInfo = ((CPagingInfo)(results[1]));
            return ((CTax[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryTaxListAsync(string InputValue, CPagingInfo PageInfo) {
            this.GetInventoryTaxListAsync(InputValue, PageInfo, null);
        }
        
        /// <remarks/>
        public void GetInventoryTaxListAsync(string InputValue, CPagingInfo PageInfo, object userState) {
            if ((this.GetInventoryTaxListOperationCompleted == null)) {
                this.GetInventoryTaxListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryTaxListOperationCompleted);
            }
            this.InvokeAsync("GetInventoryTaxList", new object[] {
                        InputValue,
                        PageInfo}, this.GetInventoryTaxListOperationCompleted, userState);
        }
        
        private void OnGetInventoryTaxListOperationCompleted(object arg) {
            if ((this.GetInventoryTaxListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryTaxListCompleted(this, new GetInventoryTaxListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventoryTax", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CTax GetInventoryTax(string InputValue) {
            object[] results = this.Invoke("GetInventoryTax", new object[] {
                        InputValue});
            return ((CTax)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryTaxAsync(string InputValue) {
            this.GetInventoryTaxAsync(InputValue, null);
        }
        
        /// <remarks/>
        public void GetInventoryTaxAsync(string InputValue, object userState) {
            if ((this.GetInventoryTaxOperationCompleted == null)) {
                this.GetInventoryTaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryTaxOperationCompleted);
            }
            this.InvokeAsync("GetInventoryTax", new object[] {
                        InputValue}, this.GetInventoryTaxOperationCompleted, userState);
        }
        
        private void OnGetInventoryTaxOperationCompleted(object arg) {
            if ((this.GetInventoryTaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryTaxCompleted(this, new GetInventoryTaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateInventoryTax", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CApplicationMessage UpdateInventoryTax(string InputValue) {
            object[] results = this.Invoke("UpdateInventoryTax", new object[] {
                        InputValue});
            return ((CApplicationMessage)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInventoryTaxAsync(string InputValue) {
            this.UpdateInventoryTaxAsync(InputValue, null);
        }
        
        /// <remarks/>
        public void UpdateInventoryTaxAsync(string InputValue, object userState) {
            if ((this.UpdateInventoryTaxOperationCompleted == null)) {
                this.UpdateInventoryTaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInventoryTaxOperationCompleted);
            }
            this.InvokeAsync("UpdateInventoryTax", new object[] {
                        InputValue}, this.UpdateInventoryTaxOperationCompleted, userState);
        }
        
        private void OnUpdateInventoryTaxOperationCompleted(object arg) {
            if ((this.UpdateInventoryTaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInventoryTaxCompleted(this, new UpdateInventoryTaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventoryUnitListInCSV", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInventoryUnitListInCSV(string InputValue, ref string PageInfo) {
            object[] results = this.Invoke("GetInventoryUnitListInCSV", new object[] {
                        InputValue,
                        PageInfo});
            PageInfo = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryUnitListInCSVAsync(string InputValue, string PageInfo) {
            this.GetInventoryUnitListInCSVAsync(InputValue, PageInfo, null);
        }
        
        /// <remarks/>
        public void GetInventoryUnitListInCSVAsync(string InputValue, string PageInfo, object userState) {
            if ((this.GetInventoryUnitListInCSVOperationCompleted == null)) {
                this.GetInventoryUnitListInCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryUnitListInCSVOperationCompleted);
            }
            this.InvokeAsync("GetInventoryUnitListInCSV", new object[] {
                        InputValue,
                        PageInfo}, this.GetInventoryUnitListInCSVOperationCompleted, userState);
        }
        
        private void OnGetInventoryUnitListInCSVOperationCompleted(object arg) {
            if ((this.GetInventoryUnitListInCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryUnitListInCSVCompleted(this, new GetInventoryUnitListInCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventoryUnitList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CUnit[] GetInventoryUnitList(string InputValue, ref CPagingInfo PageInfo) {
            object[] results = this.Invoke("GetInventoryUnitList", new object[] {
                        InputValue,
                        PageInfo});
            PageInfo = ((CPagingInfo)(results[1]));
            return ((CUnit[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryUnitListAsync(string InputValue, CPagingInfo PageInfo) {
            this.GetInventoryUnitListAsync(InputValue, PageInfo, null);
        }
        
        /// <remarks/>
        public void GetInventoryUnitListAsync(string InputValue, CPagingInfo PageInfo, object userState) {
            if ((this.GetInventoryUnitListOperationCompleted == null)) {
                this.GetInventoryUnitListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryUnitListOperationCompleted);
            }
            this.InvokeAsync("GetInventoryUnitList", new object[] {
                        InputValue,
                        PageInfo}, this.GetInventoryUnitListOperationCompleted, userState);
        }
        
        private void OnGetInventoryUnitListOperationCompleted(object arg) {
            if ((this.GetInventoryUnitListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryUnitListCompleted(this, new GetInventoryUnitListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventoryUnit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CUnit GetInventoryUnit(string InputValue) {
            object[] results = this.Invoke("GetInventoryUnit", new object[] {
                        InputValue});
            return ((CUnit)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryUnitAsync(string InputValue) {
            this.GetInventoryUnitAsync(InputValue, null);
        }
        
        /// <remarks/>
        public void GetInventoryUnitAsync(string InputValue, object userState) {
            if ((this.GetInventoryUnitOperationCompleted == null)) {
                this.GetInventoryUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryUnitOperationCompleted);
            }
            this.InvokeAsync("GetInventoryUnit", new object[] {
                        InputValue}, this.GetInventoryUnitOperationCompleted, userState);
        }
        
        private void OnGetInventoryUnitOperationCompleted(object arg) {
            if ((this.GetInventoryUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryUnitCompleted(this, new GetInventoryUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateInventoryUnit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CApplicationMessage UpdateInventoryUnit(string InputValue) {
            object[] results = this.Invoke("UpdateInventoryUnit", new object[] {
                        InputValue});
            return ((CApplicationMessage)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInventoryUnitAsync(string InputValue) {
            this.UpdateInventoryUnitAsync(InputValue, null);
        }
        
        /// <remarks/>
        public void UpdateInventoryUnitAsync(string InputValue, object userState) {
            if ((this.UpdateInventoryUnitOperationCompleted == null)) {
                this.UpdateInventoryUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInventoryUnitOperationCompleted);
            }
            this.InvokeAsync("UpdateInventoryUnit", new object[] {
                        InputValue}, this.UpdateInventoryUnitOperationCompleted, userState);
        }
        
        private void OnUpdateInventoryUnitOperationCompleted(object arg) {
            if ((this.UpdateInventoryUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInventoryUnitCompleted(this, new UpdateInventoryUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CPagingInfo : CObjectBase {
        
        private int totalPageField;
        
        private int pageIndexField;
        
        private int maxRowField;
        
        private string sortColumnField;
        
        private string sortTypeField;
        
        private int totalRowsField;
        
        /// <remarks/>
        public int TotalPage {
            get {
                return this.totalPageField;
            }
            set {
                this.totalPageField = value;
            }
        }
        
        /// <remarks/>
        public int PageIndex {
            get {
                return this.pageIndexField;
            }
            set {
                this.pageIndexField = value;
            }
        }
        
        /// <remarks/>
        public int MaxRow {
            get {
                return this.maxRowField;
            }
            set {
                this.maxRowField = value;
            }
        }
        
        /// <remarks/>
        public string SortColumn {
            get {
                return this.sortColumnField;
            }
            set {
                this.sortColumnField = value;
            }
        }
        
        /// <remarks/>
        public string SortType {
            get {
                return this.sortTypeField;
            }
            set {
                this.sortTypeField = value;
            }
        }
        
        /// <remarks/>
        public int TotalRows {
            get {
                return this.totalRowsField;
            }
            set {
                this.totalRowsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CUnit))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CTax))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CStock))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CItemGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CApplicationMessage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CItems))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CPagingInfo))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CObjectBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CUnit : CObjectBase {
        
        private int idField;
        
        private string codeField;
        
        private string nameField;
        
        private System.Nullable<int> createdByField;
        
        private System.Nullable<System.DateTime> createdDateTimeField;
        
        private System.Nullable<int> lastUpdatedByField;
        
        private System.Nullable<System.DateTime> lastUpdatedDateTimeField;
        
        private string descriptionField;
        
        private bool activeField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CreatedDateTime {
            get {
                return this.createdDateTimeField;
            }
            set {
                this.createdDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LastUpdatedBy {
            get {
                return this.lastUpdatedByField;
            }
            set {
                this.lastUpdatedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastUpdatedDateTime {
            get {
                return this.lastUpdatedDateTimeField;
            }
            set {
                this.lastUpdatedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CTax : CObjectBase {
        
        private int idField;
        
        private string codeField;
        
        private string nameField;
        
        private decimal percentField;
        
        private System.Nullable<int> createdByField;
        
        private System.Nullable<System.DateTime> createdDateTimeField;
        
        private System.Nullable<int> lastUpdatedByField;
        
        private string lastUpdatedDateTimeField;
        
        private string descriptionField;
        
        private bool activeField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public decimal Percent {
            get {
                return this.percentField;
            }
            set {
                this.percentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CreatedDateTime {
            get {
                return this.createdDateTimeField;
            }
            set {
                this.createdDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LastUpdatedBy {
            get {
                return this.lastUpdatedByField;
            }
            set {
                this.lastUpdatedByField = value;
            }
        }
        
        /// <remarks/>
        public string LastUpdatedDateTime {
            get {
                return this.lastUpdatedDateTimeField;
            }
            set {
                this.lastUpdatedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CStock : CObjectBase {
        
        private int idField;
        
        private string codeField;
        
        private string nameField;
        
        private System.Nullable<int> parentIDField;
        
        private int levelField;
        
        private string descriptionField;
        
        private System.Nullable<int> createdByField;
        
        private System.Nullable<System.DateTime> createdDateTimeField;
        
        private System.Nullable<int> lastUpdatedByField;
        
        private System.Nullable<System.DateTime> lastUpdatedDateTimeField;
        
        private bool activeField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ParentID {
            get {
                return this.parentIDField;
            }
            set {
                this.parentIDField = value;
            }
        }
        
        /// <remarks/>
        public int Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CreatedDateTime {
            get {
                return this.createdDateTimeField;
            }
            set {
                this.createdDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LastUpdatedBy {
            get {
                return this.lastUpdatedByField;
            }
            set {
                this.lastUpdatedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastUpdatedDateTime {
            get {
                return this.lastUpdatedDateTimeField;
            }
            set {
                this.lastUpdatedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CItemGroup : CObjectBase {
        
        private int idField;
        
        private string codeField;
        
        private string nameField;
        
        private System.Nullable<int> parentIDField;
        
        private int levelField;
        
        private System.Nullable<int> createdByField;
        
        private System.Nullable<System.DateTime> createdDateTimeField;
        
        private System.Nullable<int> lastUpdatedByField;
        
        private System.Nullable<System.DateTime> lastUpdatedDateTimeField;
        
        private string descriptionField;
        
        private bool activeField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ParentID {
            get {
                return this.parentIDField;
            }
            set {
                this.parentIDField = value;
            }
        }
        
        /// <remarks/>
        public int Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CreatedDateTime {
            get {
                return this.createdDateTimeField;
            }
            set {
                this.createdDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LastUpdatedBy {
            get {
                return this.lastUpdatedByField;
            }
            set {
                this.lastUpdatedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastUpdatedDateTime {
            get {
                return this.lastUpdatedDateTimeField;
            }
            set {
                this.lastUpdatedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CApplicationMessage : CObjectBase {
        
        private int idField;
        
        private string codeField;
        
        private string nameField;
        
        private int typeField;
        
        private System.Nullable<System.DateTime> createdDateTimeField;
        
        private System.Nullable<int> createdByField;
        
        private System.Nullable<System.DateTime> lastUpdatedDateTimeField;
        
        private System.Nullable<int> lastUpdatedByField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CreatedDateTime {
            get {
                return this.createdDateTimeField;
            }
            set {
                this.createdDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastUpdatedDateTime {
            get {
                return this.lastUpdatedDateTimeField;
            }
            set {
                this.lastUpdatedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LastUpdatedBy {
            get {
                return this.lastUpdatedByField;
            }
            set {
                this.lastUpdatedByField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CItems : CObjectBase {
        
        private int idField;
        
        private string codeField;
        
        private string nameField;
        
        private string itemTypeIDField;
        
        private int groupIDField;
        
        private double salePriceField;
        
        private string costMethodField;
        
        private int creditAccountField;
        
        private int debitAccountField;
        
        private int taxIDField;
        
        private int unitIDField;
        
        private string descriptionField;
        
        private System.Nullable<int> createdByField;
        
        private System.Nullable<System.DateTime> createdDateTimeField;
        
        private System.Nullable<int> lastUpdatedByField;
        
        private System.Nullable<System.DateTime> lastUpdatedDateTimeField;
        
        private bool activeField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string ItemTypeID {
            get {
                return this.itemTypeIDField;
            }
            set {
                this.itemTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public int GroupID {
            get {
                return this.groupIDField;
            }
            set {
                this.groupIDField = value;
            }
        }
        
        /// <remarks/>
        public double SalePrice {
            get {
                return this.salePriceField;
            }
            set {
                this.salePriceField = value;
            }
        }
        
        /// <remarks/>
        public string CostMethod {
            get {
                return this.costMethodField;
            }
            set {
                this.costMethodField = value;
            }
        }
        
        /// <remarks/>
        public int CreditAccount {
            get {
                return this.creditAccountField;
            }
            set {
                this.creditAccountField = value;
            }
        }
        
        /// <remarks/>
        public int DebitAccount {
            get {
                return this.debitAccountField;
            }
            set {
                this.debitAccountField = value;
            }
        }
        
        /// <remarks/>
        public int TaxID {
            get {
                return this.taxIDField;
            }
            set {
                this.taxIDField = value;
            }
        }
        
        /// <remarks/>
        public int UnitID {
            get {
                return this.unitIDField;
            }
            set {
                this.unitIDField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CreatedDateTime {
            get {
                return this.createdDateTimeField;
            }
            set {
                this.createdDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LastUpdatedBy {
            get {
                return this.lastUpdatedByField;
            }
            set {
                this.lastUpdatedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastUpdatedDateTime {
            get {
                return this.lastUpdatedDateTimeField;
            }
            set {
                this.lastUpdatedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventoryItemsListInCSVCompletedEventHandler(object sender, GetInventoryItemsListInCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryItemsListInCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryItemsListInCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string PageInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventoryItemsListCompletedEventHandler(object sender, GetInventoryItemsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryItemsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryItemsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CItems[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CItems[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CPagingInfo PageInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CPagingInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventoryItemCompletedEventHandler(object sender, GetInventoryItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CItems Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CItems)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateInventoryItemCompletedEventHandler(object sender, UpdateInventoryItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInventoryItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInventoryItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CApplicationMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CApplicationMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventoryItemGroupListInCSVCompletedEventHandler(object sender, GetInventoryItemGroupListInCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryItemGroupListInCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryItemGroupListInCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string PageInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventoryItemGroupListCompletedEventHandler(object sender, GetInventoryItemGroupListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryItemGroupListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryItemGroupListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CItemGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CItemGroup[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CPagingInfo PageInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CPagingInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventoryItemGroupCompletedEventHandler(object sender, GetInventoryItemGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryItemGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryItemGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CItemGroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CItemGroup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateInventoryItemGroupCompletedEventHandler(object sender, UpdateInventoryItemGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInventoryItemGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInventoryItemGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CApplicationMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CApplicationMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventoryStockListInCSVCompletedEventHandler(object sender, GetInventoryStockListInCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryStockListInCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryStockListInCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string PageInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventoryStockListCompletedEventHandler(object sender, GetInventoryStockListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryStockListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryStockListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CStock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CStock[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CPagingInfo PageInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CPagingInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventoryStockCompletedEventHandler(object sender, GetInventoryStockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CStock Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CStock)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateInventoryStockCompletedEventHandler(object sender, UpdateInventoryStockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInventoryStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInventoryStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CApplicationMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CApplicationMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventoryTaxListInCSVCompletedEventHandler(object sender, GetInventoryTaxListInCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryTaxListInCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryTaxListInCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string PageInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventoryTaxListCompletedEventHandler(object sender, GetInventoryTaxListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryTaxListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryTaxListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CTax[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CTax[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CPagingInfo PageInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CPagingInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventoryTaxCompletedEventHandler(object sender, GetInventoryTaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryTaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryTaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CTax Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CTax)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateInventoryTaxCompletedEventHandler(object sender, UpdateInventoryTaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInventoryTaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInventoryTaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CApplicationMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CApplicationMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventoryUnitListInCSVCompletedEventHandler(object sender, GetInventoryUnitListInCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryUnitListInCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryUnitListInCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string PageInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventoryUnitListCompletedEventHandler(object sender, GetInventoryUnitListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryUnitListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryUnitListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CUnit[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CUnit[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CPagingInfo PageInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CPagingInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventoryUnitCompletedEventHandler(object sender, GetInventoryUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CUnit Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CUnit)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateInventoryUnitCompletedEventHandler(object sender, UpdateInventoryUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInventoryUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInventoryUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CApplicationMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CApplicationMessage)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591