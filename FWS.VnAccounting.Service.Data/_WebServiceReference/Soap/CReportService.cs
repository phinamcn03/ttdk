
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4959
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 

namespace FWS.VnAccounting.Service.Data.WebServiceReference.Soap
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "ReportServiceSoap", Namespace = "http://tempuri.org/")]
    public partial class CReportService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback GetReportOperationCompleted;

        private System.Threading.SendOrPostCallback GetDicrectoryOperationCompleted;

        private System.Threading.SendOrPostCallback CreateFolderOperationCompleted;

        private System.Threading.SendOrPostCallback SaveFileOperationCompleted;

        private System.Threading.SendOrPostCallback DeleteFileOperationCompleted;

        /// <remarks/>
        public CReportService()
        {
            string urlSetting = System.Configuration.ConfigurationManager.AppSettings["FWS.VnAccounting.Service.Report"];
            if ((urlSetting != null))
            {
                this.Url = urlSetting + "/Service/ReportService.asmx";
            }
            else
            {
                this.Url = "http://localhost/FWS.VnAccounting.Service.Report/Service/ReportService.asmx";
            }
        }

        /// <remarks/>
        public event GetReportCompletedEventHandler GetReportCompleted;

        /// <remarks/>
        public event GetDicrectoryCompletedEventHandler GetDicrectoryCompleted;

        /// <remarks/>
        public event CreateFolderCompletedEventHandler CreateFolderCompleted;

        /// <remarks/>
        public event SaveFileCompletedEventHandler SaveFileCompleted;

        /// <remarks/>
        public event DeleteFileCompletedEventHandler DeleteFileCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReport", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CReport GetReport(int userid, string sessionno, int languageid, string xmlData, string exportType)
        {
            object[] results = this.Invoke("GetReport", new object[] {
                    userid,
                    sessionno,
                    languageid,
                    xmlData,
                    exportType});
            return ((CReport)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetReport(int userid, string sessionno, int languageid, string xmlData, string exportType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetReport", new object[] {
                    userid,
                    sessionno,
                    languageid,
                    xmlData,
                    exportType}, callback, asyncState);
        }

        /// <remarks/>
        public CReport EndGetReport(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((CReport)(results[0]));
        }

        /// <remarks/>
        public void GetReportAsync(int userid, string sessionno, int languageid, string xmlData, string exportType)
        {
            this.GetReportAsync(userid, sessionno, languageid, xmlData, exportType, null);
        }

        /// <remarks/>
        public void GetReportAsync(int userid, string sessionno, int languageid, string xmlData, string exportType, object userState)
        {
            if ((this.GetReportOperationCompleted == null))
            {
                this.GetReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportOperationCompleted);
            }
            this.InvokeAsync("GetReport", new object[] {
                    userid,
                    sessionno,
                    languageid,
                    xmlData,
                    exportType}, this.GetReportOperationCompleted, userState);
        }

        private void OnGetReportOperationCompleted(object arg)
        {
            if ((this.GetReportCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportCompleted(this, new GetReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDicrectory", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDicrectory()
        {
            object[] results = this.Invoke("GetDicrectory", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetDicrectory(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetDicrectory", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndGetDicrectory(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetDicrectoryAsync()
        {
            this.GetDicrectoryAsync(null);
        }

        /// <remarks/>
        public void GetDicrectoryAsync(object userState)
        {
            if ((this.GetDicrectoryOperationCompleted == null))
            {
                this.GetDicrectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDicrectoryOperationCompleted);
            }
            this.InvokeAsync("GetDicrectory", new object[0], this.GetDicrectoryOperationCompleted, userState);
        }

        private void OnGetDicrectoryOperationCompleted(object arg)
        {
            if ((this.GetDicrectoryCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDicrectoryCompleted(this, new GetDicrectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateFolder", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateFolder(string pFolderName)
        {
            object[] results = this.Invoke("CreateFolder", new object[] {
                    pFolderName});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCreateFolder(string pFolderName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CreateFolder", new object[] {
                    pFolderName}, callback, asyncState);
        }

        /// <remarks/>
        public string EndCreateFolder(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void CreateFolderAsync(string pFolderName)
        {
            this.CreateFolderAsync(pFolderName, null);
        }

        /// <remarks/>
        public void CreateFolderAsync(string pFolderName, object userState)
        {
            if ((this.CreateFolderOperationCompleted == null))
            {
                this.CreateFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFolderOperationCompleted);
            }
            this.InvokeAsync("CreateFolder", new object[] {
                    pFolderName}, this.CreateFolderOperationCompleted, userState);
        }

        private void OnCreateFolderOperationCompleted(object arg)
        {
            if ((this.CreateFolderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFolderCompleted(this, new CreateFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveFile([System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")] byte[] pBuffer, string pLocalion, string pFileName)
        {
            object[] results = this.Invoke("SaveFile", new object[] {
                    pBuffer,
                    pLocalion,
                    pFileName});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSaveFile(byte[] pBuffer, string pLocalion, string pFileName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SaveFile", new object[] {
                    pBuffer,
                    pLocalion,
                    pFileName}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSaveFile(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SaveFileAsync(byte[] pBuffer, string pLocalion, string pFileName)
        {
            this.SaveFileAsync(pBuffer, pLocalion, pFileName, null);
        }

        /// <remarks/>
        public void SaveFileAsync(byte[] pBuffer, string pLocalion, string pFileName, object userState)
        {
            if ((this.SaveFileOperationCompleted == null))
            {
                this.SaveFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFileOperationCompleted);
            }
            this.InvokeAsync("SaveFile", new object[] {
                    pBuffer,
                    pLocalion,
                    pFileName}, this.SaveFileOperationCompleted, userState);
        }

        private void OnSaveFileOperationCompleted(object arg)
        {
            if ((this.SaveFileCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFileCompleted(this, new SaveFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteFile(string pFileName, string pLocation)
        {
            object[] results = this.Invoke("DeleteFile", new object[] {
                    pFileName,
                    pLocation});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDeleteFile(string pFileName, string pLocation, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DeleteFile", new object[] {
                    pFileName,
                    pLocation}, callback, asyncState);
        }

        /// <remarks/>
        public string EndDeleteFile(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void DeleteFileAsync(string pFileName, string pLocation)
        {
            this.DeleteFileAsync(pFileName, pLocation, null);
        }

        /// <remarks/>
        public void DeleteFileAsync(string pFileName, string pLocation, object userState)
        {
            if ((this.DeleteFileOperationCompleted == null))
            {
                this.DeleteFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileOperationCompleted);
            }
            this.InvokeAsync("DeleteFile", new object[] {
                    pFileName,
                    pLocation}, this.DeleteFileOperationCompleted, userState);
        }

        private void OnDeleteFileOperationCompleted(object arg)
        {
            if ((this.DeleteFileCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileCompleted(this, new DeleteFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class CReport
    {

        private string reportUrlField;

        private string nameField;

        private string titleField;

        private string exportNameField;

        private string exportTypeField;

        private string descriptionField;

        private byte[] contentField;

        private CReportImage[] listReportImageField;

        /// <remarks/>
        public string ReportUrl
        {
            get
            {
                return this.reportUrlField;
            }
            set
            {
                this.reportUrlField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public string Title
        {
            get
            {
                return this.titleField;
            }
            set
            {
                this.titleField = value;
            }
        }

        /// <remarks/>
        public string ExportName
        {
            get
            {
                return this.exportNameField;
            }
            set
            {
                this.exportNameField = value;
            }
        }

        /// <remarks/>
        public string ExportType
        {
            get
            {
                return this.exportTypeField;
            }
            set
            {
                this.exportTypeField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
        public byte[] Content
        {
            get
            {
                return this.contentField;
            }
            set
            {
                this.contentField = value;
            }
        }

        /// <remarks/>
        public CReportImage[] ListReportImage
        {
            get
            {
                return this.listReportImageField;
            }
            set
            {
                this.listReportImageField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class CReportImage
    {

        private string fileNameField;

        private string locationField;

        private byte[] contentField;

        /// <remarks/>
        public string FileName
        {
            get
            {
                return this.fileNameField;
            }
            set
            {
                this.fileNameField = value;
            }
        }

        /// <remarks/>
        public string Location
        {
            get
            {
                return this.locationField;
            }
            set
            {
                this.locationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
        public byte[] Content
        {
            get
            {
                return this.contentField;
            }
            set
            {
                this.contentField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetReportCompletedEventHandler(object sender, GetReportCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public CReport Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CReport)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetDicrectoryCompletedEventHandler(object sender, GetDicrectoryCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDicrectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetDicrectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void CreateFolderCompletedEventHandler(object sender, CreateFolderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CreateFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SaveFileCompletedEventHandler(object sender, SaveFileCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SaveFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void DeleteFileCompletedEventHandler(object sender, DeleteFileCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DeleteFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}